NUM_TOPICS = 5

GENERATE_CHART_TOPICS_PROMPT = """你是一位数据分析专家，并且对不同的主题有广泛的知识。
我的角色是："{persona}"
我希望你根据我的角色生成 {num_topics} 个与 {figure_type} 相关的主题，这些主题是我感兴趣的，或者是我日常生活中可能会看到的。

以下是具体要求：
1. 每个主题是一个统计分布的高层次总结，并包含一些细节，例如：“美国人口增长及年龄段划分。”
2. 主题应具有多样性，以帮助我生成各种不同的图表。每个主题应该是独特的，不要与其他主题重复。
3. 主题应基于图表类型进行设计。请确保你提供的主题最适合用 "{figure_type}" 来可视化。
4. 即使角色语言不是中文，所有主题也必须用中文描述。
5. 列出 {num_topics} 个适合 "{persona}" 的主题，并用 "|" 字符分隔，例如：主题1 | 主题2 | ...... | 主题{num_topics}。
不要在你的回复开头或结尾包含任何额外的文字。"""


GENERATE_CHART_DATA_PROMPT = """您是一位数据分析专家，并且对各种主题有广泛的了解。
我的角色是："{persona}"
我需要一些关于"{topic}"的数据，用于生成一个{figure_type}。
以下是要求：
1. 数据结构必须适合{figure_type}。
2. 内容与主题相关，并根据我的角色进行定制。
3. 数据应真实，并使用真实世界中的实体命名内容。不要使用占位符名称，如xxA、xxB等。
4. 数据应多样化，包含多个数据点，以确保图表信息丰富。
5. 不要提供过多数据，只需满足主题和图表类型所需的必要数据点。
6. 即使角色是非中文的，所有数据也必须用中文提供。
请以CSV格式提供数据，不要在开头或结尾添加额外的文本。"""


GENERATE_CHART_DATA_JSON_PROMPT = """你是一位数据分析专家，对各种主题有广泛的了解。
我的人物角色是: "{persona}"
我需要一些关于 "{topic}" 的数据，这些数据可以用于生成 {figure_type}。
以下是要求：
1. 数据结构必须适合 {figure_type}。
2. 内容与主题相关，并根据我的人物角色进行定制。
3. 数据应真实可信，内容应使用真实的实体名称。不要使用占位符名称如 xxA, xxB 等。
4. 数据应具有多样性，包含多个数据点，以确保图表信息丰富。
5. 不要提供过多数据，仅提供满足主题和图表类型所需的数据点。
6. 即使人物角色是非中文的，所有数据也必须用中文提供。
请以 JSON 格式提供数据，不要在开头或结尾添加额外文本。"""


GENERATE_CHART_QA_PROMPT = """你是一位数据分析专家，并且擅长就图表提出问题。
我的角色是: "{persona}"
我希望你生成一些关于{figure_type}和{topic}的问答对，这是我可能会问的问题。
我不会展示图表，而是提供生成图表的数据和代码。

<data>
{data}
</data>

<code>
{code}
</code>

请提出一组*合理的问题*，这是人们在看到渲染图表时会问的问题。以下是要求：
1. **问题风格**：问题必须自然且与图表相关，这些问题应该有助于解读数据并理解其中的洞察。
    (1) 问题复杂程度应有所不同。一些问题可以通过参考图表轻松回答，而另一些则需要多步推理。
    (2) 问题应基于图表中的*可视化信息*回答。不要在问题中涉及任何代码细节，因为此类信息在图表中是不可见的。

2. **问题类型**：所有问题都应是可以根据图表中的可视化信息回答的简答题。
    (1) **基础问题**：询问图表的基本元素，如视觉外观、标题、坐标轴、刻度、颜色、数据点数量等。使用**自然语言**描述这些元素，不要使用代码术语（如RGB、HEX等）。
    (2) **组合问题**：包含至少两个数学或逻辑操作的问题，例如求和、差异、平均值等，例如：“组A的中位数是多少？”。请使用不同数量和类型的操作生成问题。
    (3) **比较问题**：询问两个或更多数据点之间的关系，例如：“哪个组的值最高？”。请使用不同的比较运算符（大于、小于、等于等）和数据点生成问题。
    (4) **特定于图表类型的问题**：与{figure_type}特定的图表类型相关的问题。

3. **提供解释**：
    (1) 除了每个问题的*简洁答案*（尽可能简短）外，还需提供详细的*分步解释*，说明达到答案的推理步骤。
    (2) 对于复杂的问题，请提供**更详细的解释**，以分解解决过程。

4. **回答格式**：使用“|”分隔问题、解释和简洁答案。
    (1) 遵循以下格式：问题 | 解释 | 简洁答案，例如：组A的平均值是多少？ | 组A有5个数据点，总和为（34 + 45 + 23 + 56 + 12）= 170，因此平均值为170/5 = 34 | 34
    (2) 使用双换行符 (\n\n) 分隔每组问答对。question1 | explanation1 | answer1\n\nquestion2 | explanation2 | answer2\n\n...
    (3) 不要提供过多问题，5-10个问题即可。专注于问题的多样性和高质量，并为复杂问题提供非常详细的解释。
    (4) 简洁答案应尽量简短，直接回答问题。所有回答中的文字应使用自然语言，不使用代码术语，并去除任何不必要的字符。

请严格遵守格式，不要在你的回答开头或结尾包含任何额外文本。"""



GENERATE_CHART_CODE_MATPLOTLIB_PROMPT = """你是数据分析专家，擅长编写代码（Python `matplotlib`）生成图表。
我的角色是：“{persona}”
我有一些关于{topic}的数据，可以用来生成一个{figure_type}。

以下是数据（CSV格式，已经作为pd.DataFrame加载）：
<data>
{data}
</data>

请定义一个Python函数（使用`matplotlib`）叫做`generate_plot`，它将使用提供的数据生成一个{figure_type}。以下是要求：
1. **样式要求**：
    (1) 尝试富有创意，调整参数（例如字体、颜色、标记等）使图表看起来独特。通过使用`plt.style.use('{style_name}')`来设置样式，在其后plt.style.use设置字体为SimHei。
    (2) 考虑数据的**尺度**来选择合适的设计尺度（轴范围、图表大小、字体/标记大小等），确保图表中的信息清晰易懂，没有文字重叠等问题。
    (3) 图中使用中文。

2. **代码要求**：创建一个名为`generate_plot`的函数，使用`matplotlib`生成图表。
    (1) 提供的数据作为第一个参数传递给函数，数据已经作为pd.DataFrame加载。函数不需要其他参数。你可能需要调整数据格式或硬编码一些数据以符合`matplotlib`的规范。
    (2) 请记得在脚本开头导入必要的库（例如`import numpy as np`，`import matplotlib.pyplot as plt`）。
    (3) `generate_plot`函数应将图表保存到一个BytesIO对象中，然后返回该图表作为PIL Image对象。**不要关闭BytesIO对象。**
    (4) 在`savefig`中使用`bbox_inches='tight'`参数，或者使用`plt.tight_layout()`，确保图表保存时所有元素（标题、标签等）可见。
    (5) 仅定义函数，不调用它。不要显示图表。以适当的分辨率保存图表。不需要展示示例用法。

3. **输出要求**：
    请在脚本开头添加```python，在结尾添加```，以将代码与文本分开。这样可以帮助我轻松提取代码。

请不要在脚本中添加任何额外的文本，整个回答应仅为可以直接执行的Python代码。"""



GENERATE_CHART_CODE_PLOTLY_PROMPT = """你是数据分析专家，并擅长编写代码（Python `plotly`）来生成图表。
我的角色是: "{persona}"
我有一些关于{topic}的数据，可以用来生成一个{figure_type}。

以下是数据（CSV格式，已经加载为pd.DataFrame）：
<data>
{data}
</data>

请定义一个Python函数（使用`plotly`）叫做`generate_plot`，该函数使用提供的数据生成一个{figure_type}。以下是要求：
1. **样式要求**：
    (1) 尝试富有创意，修改默认参数（例如字体、颜色、标记等），使得图表样式独特。
    (2) 根据**数据的尺度**选择合适的设计比例（坐标轴范围、图表大小、字体/标记大小等），确保图表中的信息清晰易懂，避免文字重叠等问题。
    (3) 图中使用中文。

2. **代码要求**：创建一个叫做`generate_plot`的函数，使用`plotly`生成图表。不要使用matplotlib或其他库。
    (1) 提供的数据已作为pd.DataFrame加载，并作为函数的第一个参数。函数不接受其他参数。你可能需要调整数据格式以符合`plotly`的要求。
    (2) 记得在脚本开头导入必要的库（例如`import numpy as np`，`import plotly.express as px`）。
    (3) `generate_plot`函数应该将图表保存到BytesIO并返回该图表作为PIL Image对象。**不要关闭BytesIO对象。**
    (4) 选择合适的边距和紧凑布局，确保图表保存时所有元素（标题、标签等）都可见。如有必要，旋转文字以确保不会有文字重叠。
    (5) 仅定义函数，不要调用它。不显示图表。保存图表时，确保足够的分辨率，以确保图表清晰可见。无需显示示例用法。

3. **输出要求**：
    在脚本的开头添加```python，结尾添加```，以将代码与文本分隔开。这将帮助我轻松提取代码。

请不要在脚本中添加任何额外的文本，你的完整回答应该是可以直接执行的Python代码。"""



GENERATE_CHART_CODE_VEGALITE_PROMPT = """你是一个数据分析专家，擅长编写Vega-Lite JSON来生成图表。
我的角色是：“{persona}”
我有一些关于{topic}的数据，可以用来生成一个{figure_type}。

以下是数据（JSON格式）：
<data>
{data}
</data>

请使用Vega-Lite根据提供的数据定义一个{figure_type}的图表，格式为JSON。以下是要求：
1. **样式要求**：
    (1) 尝试富有创意地修改默认参数（例如字体、颜色、标记等），使图表风格独特。
    (2) 考虑到**数据的尺度**，选择合适的设计尺度（坐标轴范围、图形大小、字体/标记大小等），确保图表中的信息清晰易懂，没有文本重叠等问题。
    (3) 不要使用罕见的字体或颜色，这些可能并非所有查看者都能支持。
    (3) 图中使用中文。

2. **代码要求**：使用Vega-Lite（JSON格式）定义图表。
    (1) 你需要将提供的数据硬编码到JSON中来生成文档。请注意Vega-Lite JSON的语法和格式。
    (2) 选择适当的边距和紧凑布局，确保图表保存时所有元素（标题、标签等）都可见。
    (3) 不要在图表中添加实际数据数字。这非常重要，因为你不能将数据与图表元素对齐。
    (4) 如果数据包含年份信息，请确保在x轴上正确格式化年份。

3. **输出要求**：
    在脚本的开头放置```vegalite，并在结尾放置```，以便将代码与文本分开。这将帮助我轻松提取JSON。

请不要在脚本中添加任何额外的文本，你的整个回答应该是可以直接执行的Vega-Lite JSON。"""




GENERATE_CHART_CODE_LATEX_PROMPT = """您是数据分析专家，擅长编写LaTeX代码生成图表。
我的身份是：“{persona}”
我有一些关于{topic}的数据，可以用来生成一个{figure_type}。

以下是数据（CSV格式）：
<data>
{data}
</data>

请编写一段LaTeX脚本，使用提供的数据生成一个{figure_type}。以下是要求：
1. **样式要求**：
    (1) 尝试富有创意，修改默认参数（例如字体、颜色、标记等），使图表样式独特。您可以使用常见的LaTeX包，例如帮助处理表格的包（如booktabs等）、帮助生成图形的包（如pgfplots等）和绘图包（如tikz等）。
    (2) 根据**数据的规模**选择合适的设计比例（坐标轴范围、图表大小、字体/标记大小等），确保图表中的信息清晰易懂，避免文字重叠等问题。
    (3) 选择合适的页边距和紧凑布局，确保图表保存时所有元素（标题、标签等）都能显示完整。
    (3) 图中使用中文。

2. **代码要求**：
    (1) 您需要将提供的数据硬编码到LaTeX脚本中，以生成图表。请注意LaTeX脚本的语法和格式。
    (2) 使用`standalone` LaTeX文档类生成图表，并添加一些边框边距（`[border=xxpt]`）。**不要添加页码。**

3. **输出要求**：
    在脚本的开头加上```latex，在结尾加上```，以便将代码与文本分开。这样可以帮助我轻松提取代码。

请不要在脚本中添加任何额外的文字。您的所有回复应该是可以直接执行的LaTeX代码。"""



GENERATE_CHART_CODE_HTML_PROMPT = """你是一个专家级的网页设计师，擅长编写 HTML 来创建图表。
我的身份是："{persona}"
我有一些关于 {topic} 的数据，可以用来生成一个 {figure_type}。

以下是数据（JSON 格式）：
<data>
{data}
</data>

请使用 HTML 和 CSS 根据提供的数据生成一个 {figure_type}。以下是要求：
1. **样式要求**：可以使用任何 CSS 框架、库、JavaScript 插件或其他工具来创建图表。
    (1) 尝试发挥创意，使用 CSS 使网页样式、字体、颜色和视觉布局具有独特性，在设计图表时要考虑身份、主题和图表类型。
    (2) 考虑**数据的规模**，选择适当的设计比例（坐标轴范围、图表大小、字体/标记大小等），确保图表中的信息清晰易懂，避免文本重叠等问题。
    (3) **重要：**根据数据的规模选择合适的坐标轴范围，以确保图表中的信息易于解析。
    (3) 图中使用中文。

2. **代码要求**： 
    (1) 你需要将提供的数据硬编码到 HTML 脚本中以生成文档。注意 HTML 脚本的语法和格式。
    (2) 将所有内容放在一个 HTML 文件中，不要使用外部 CSS 或 JavaScript 文件。设置较大的图表宽度，确保图表清晰可见。

3. **输出要求**：
    请在脚本开始处加入```html，脚本结束处加入```，以区分代码与文本。

请不要在脚本中添加任何额外的文字，你的整个回应应该是可以直接执行的 HTML 代码。"""
