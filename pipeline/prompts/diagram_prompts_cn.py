NUM_TOPICS = 5


GENERATE_DIAGRAM_TOPICS_PROMPT = """您是图表设计方面的专家，拥有广泛的不同主题知识。
我的角色是：“{persona}”
我希望您为我生成 {num_topics} 个适合我的日常生活或我可能会看到的 {figure_type} 主题，基于我的角色。

以下是要求：
1. 每个主题是 {figure_type} 内容的高级总结，并包含一些设计细节，例如：“2022年1月的水电账单，详细列出各项费用”。
2. 主题应该多样化，以帮助我生成不同类型的图表。每个主题应当独特，且与其他主题不重复。
3. 主题应该依据图表类型进行调整。请确保您提供的主题能够在 "{figure_type}" 中最佳可视化。
4. 所有主题必须用中文书写，即使角色是非中文的。
5. 为 "{persona}" 列出 {num_topics} 个主题，并使用 | 字符将其分开，例如：topic1 | topic2 | ...... | topic{num_topics}。
请不要在响应的开头或结尾包含任何额外文本。"""





GENERATE_DIAGRAM_DATA_JSON_PROMPT = """你是一个图表设计专家，拥有广泛的各类主题知识。
我的角色是："{persona}"
我需要一些关于"{topic}"的元素，用于生成一个{figure_type}。
以下是要求：
1. 元素应与主题相关，并根据我的角色进行定制。其结构必须适合{figure_type}。
2. 元素应具备现实感，内容应使用现实世界中的实体命名。不要使用占位符名称，如xxA、xxB等。
3. 不要提供过多元素，只提供生成图表所需的关键信息。
4. 每个节点/边的文本应简洁明了，观众容易理解。
5. 所有元素必须使用中文，即使角色不是讲中文的。
请以JSON格式提供这些元素，不要在开头或结尾添加额外的文字。"""



GENERATE_DIAGRAM_QA_PROMPT = """你是数据分析专家，擅长提出关于图表的问题。
我的角色是："{persona}"
我希望你生成一些关于"{topic}"的"{figure_type}"问题-回答对，这些问题是我可能会问的。
我不会显示图表，而是提供生成图表的数据和代码。

<data>
{data}
</data>

<code>
{code}
</code>

请根据渲染后的图表，提出一些*合理的问题*。以下是要求：
1. **问题类型**：所有问题应为简答题，基于图表中的可视化信息可以回答。所有问题的答案可以是一个单词、短语或数字（尽可能简短）。
    (1) **描述性问题**：询问图表中的基本信息，如特定节点的值、两个节点之间的关系、节点/边的数量等。尽量涵盖图表中的不同方面/位置。
    (2) **推理性问题**：需要对图表中的多个信息进行推理。这些问题应该更具挑战性，需要对图表有更深的理解。通常，你需要遍历图表的流程，并结合多条信息来回答这些问题。
    (3) **特定图表类型的问题**：针对这种图表类型{figure_type}的独特问题。这些问题应根据图表的内容和结构量身定制。

2. **提供解释**：
    (1) 除了每个问题的*简洁答案*（尽可能简短），还要提供*逐步解释*，详细说明得出答案的推理步骤。
    (2) 对于复杂的推理问题，解释应该更详细，包含所有必要的步骤。

3. **响应格式**：用|分隔每个问题、解释和简洁答案。
    (1) 遵循此格式：问题 | 解释 | 简洁答案，例如，输入X=5时此图表的输出是什么？ | 在接收到输入X=5后，下一节点计算X*2=10，然后减去3，结果是10-3=7 | 7
    (2) 用双换行符（\n\n）分隔问题-答案对。问题1 | 解释1 | 答案1\n\n问题2 | 解释2 | 答案2\n\n...
    (3) 不要提供太多问题，5-10个问题就足够了。重点关注问题的多样性和质量，并对具有挑战性的问题提供非常详细的解释。
    (4) 简洁答案应尽可能简短，直接回答问题。答案应忠实于图表中看到的内容，且不应重新表述。答案中的所有单词应处理为自然语言，避免使用编程术语/字符。

请严格遵循格式，不要在响应的开头或结尾包含任何额外的文字。"""


GENERATE_DIAGRAM_CODE_GRAPHVIZ_PROMPT = """你是图形设计专家，擅长编写代码（Python `graphviz`）来生成图表。
我的身份是："{persona}"
我有一些关于{topic}的数据，可以用来生成一个{figure_type}。

以下是数据（JSON格式，已作为字典加载）：
<data>
{data}
</data>

请定义一个名为`generate_diagram`的Python函数（使用`graphviz`）来根据提供的数据生成一个{figure_type}。以下是要求：
1. **样式要求**：
    (1) 尝试发挥创意，修改参数（例如字体、颜色、标记等），使图表更具视觉吸引力和信息性。
    (2) 考虑**数据规模**，选择合适的设计比例（画布大小、节点/边缘、字体/标记大小等），确保图表中的所有信息清晰易懂，没有文字重叠等问题。
    (3) 图中使用中文。

2. **代码要求**：创建一个名为`generate_diagram`的函数，使用`graphviz`生成图表并将其作为PIL图像对象返回。
    (1) 提供的数据已作为字典加载，并作为函数的第一个参数。函数不需要其他参数。你可能需要调整数据格式或硬编码一些数据，以适应`graphviz` API。
    (2) 记得在脚本开始时导入必要的库（例如，`import numpy as np`，`import graphviz`等）。
    (3) `generate_diagram`函数应将图表保存到BytesIO中，并返回该图表作为PIL图像对象。**不要关闭BytesIO对象。**
    (4) 只需定义该函数，不要调用它。不要展示图表。请以适当的分辨率保存图表。不需要展示示例用法。

3. **输出要求**：
    在脚本开头加上```python，在脚本结尾加上```，以将代码与文本分开。这将帮助我轻松提取代码。

请不要在脚本中添加任何额外的文字，您的整个回答应该是可以直接执行的Python代码。"""




GENERATE_DIAGRAM_CODE_LATEX_PROMPT = """你是数据分析方面的专家，并且擅长编写 LaTeX 代码来生成图表和图形。
我的角色是：“{persona}”
我有一些关于 {topic} 的数据，可以用来生成一个 {figure_type}。

这里是数据（JSON 格式）：
<data>
{data}
</data>

请编写一个 LaTeX 脚本，使用提供的数据生成一个 {figure_type}。以下是要求：
以下是要求：
1. **样式要求**：
    (1) 尽量发挥创意，改变默认参数（如字体、颜色、标记等），使图表风格独特。你可以使用常见的 LaTeX 包，例如帮助生成表格的（booktabs 等），生成图形的（pgfplots 等），以及绘图的（tikz 等）。
    (2) 根据**数据的规模**选择合适的设计尺度（图表尺寸、节点/边的大小等），确保图表中的信息清晰且易于理解，避免文字重叠等问题。
    (3) 图中使用中文，使用 ctex 宏包。

2. **代码要求**：你可以使用任何 LaTeX 包来生成图表。
    (1) 你需要将提供的数据硬编码到 LaTeX 脚本中来生成图表。注意 LaTeX 脚本的语法和格式。
    (2) 使用 `standalone` LaTeX 文档类来生成表格，并添加一些边框 margin（`[border=xxpt]`）。**不要添加页码。**
    (3) 小心组织布局，确保图表中没有文字或元素重叠。

3. **输出要求**：
    在脚本开头添加 ```latex，并在脚本结尾添加```，以便从文本中分隔代码。这将帮助我轻松提取代码。

请不要在脚本中添加任何额外的文字。你的整个回答应为 LaTeX 代码，可以直接执行。"""




GENERATE_DIAGRAM_CODE_MERMAID_PROMPT = """你是数据分析专家，并擅长编写Mermaid代码生成图表和图形。
我的角色是：“{persona}”
我有一些关于{topic}的数据，可以用来生成一个{figure_type}。

这里是数据：
<data>
{data}
</data>

请编写Mermaid代码，使用提供的数据生成一个{figure_type}。以下是要求：
要求：
1. **样式要求**：
    (1) 尝试发挥创意，改变默认参数（例如字体、颜色、标记等），使图表样式独特。
    (2) 考虑**数据的规模**，选择适当的设计比例（图表大小、节点/边缘大小等），确保图表中的信息清晰易懂，避免文字重叠等问题。
    (3) 图中使用中文。

2. **代码要求**：
    (1) 你需要将提供的数据硬编码到Mermaid脚本中以生成图表。注意Mermaid脚本的语法和格式。你可以重新格式化或选择数据的子集以适应Mermaid语法。
    (2) 根据图表类型和数据选择合适的Mermaid类型。可用类型包括：flowchart、sequenceDiagram、classDiagram、stateDiagram、erDiagram、gantt、journey、quadrantChart、mindmap、timeline等。
    (3) 不要尝试在图表中添加图标或图片。仅使用内置的Mermaid功能。不要在Mermaid代码中使用任何样式语法。

3. **输出要求**：
    在脚本开始处添加```mermaid，在结尾处添加```，将代码与文本分开。这样有助于我轻松提取代码。

请不要在脚本中添加任何额外的文本。你的回答应该只是Mermaid代码，可以直接执行。"""
